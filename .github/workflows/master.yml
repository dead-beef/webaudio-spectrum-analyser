# This workflow will do a clean install of node dependencies, build the source code and run tests
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Master

on:
  push:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        em-version: [2.0.2]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get variables (yarn cache directory path, commit hash)
        id: get-variables
        run: echo "::set-output name=yarncachedir::$(yarn cache dir)"; echo "::set-output name=commitsha::$(echo ${GITHUB_SHA})"

      - name: Workspace cache (npm, yarn, nx, jest)
        uses: actions/cache@v2
        id: workspace-cache # use this to check for `cache-hit` (`steps.workspace-cache.outputs.cache-hit != 'true'`)
        env:
          cache-name: workspace-cache
        with:
          path: |
            ~/.npm
            ${{ steps.get-variables.outputs.yarncachedir }}
            **/node_modules
            /tmp/nx
            /tmp/jest_rs
            emsdk-cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-workspace-${{ steps.get-variables.outputs.commitsha }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-workspace-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Configure git
        id: configure-git
        run: |
          git config --global user.name ${GITHUB_ACTOR} &&
          git config --global user.email ${GITHUB_ACTOR}@users.noreply.github.com &&
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v6
        with:
          version: ${{ matrix.em-version }}
          actions-cache-folder: 'emsdk-cache'

      - name: Fix environment
        id: fix-env
        run: |
          if [[ -n $EMSDK_NODE ]]; then
            rm -rf "$(dirname "$EMSDK_NODE")"
            hash -r
          fi
          node="$(which node)"
          sed -i -r "s:^NODE_JS\s*=.*:NODE_JS = '${node}':" "$EM_CONFIG"

      - name: Install dependencies
        id: install
        run: |
          npm i -g typescript @angular/cli @nrwl/cli &&
          yarn install --frozen-lockfile &&
          yarn ngcc

      - name: Lint all
        run: npx nx run-many --target=lint --all --parallel --maxParallel=2

      - name: Unit test all
        run: npx nx run-may --target=test --all --passWithNoTests --codeCoverage=false --watch=false --maxWorkers=2 --ci --updateSnapshot

      - name: Deploy webaudio-spectrum-analyser
        id: deploy
        run: |
          yarn build:gh-pages &&
          yarn deploy:gh-pages
